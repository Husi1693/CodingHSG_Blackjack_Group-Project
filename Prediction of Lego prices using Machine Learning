{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Husi1693/CodingHSG_Blackjack_Group-Project/blob/main/Prediction%20of%20Lego%20prices%20using%20Machine%20Learning\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "F7zzPt1_1tIm"
      },
      "source": [
        "# BrickPredict - Preisvorhersage von LEGO-Sets\n",
        "\n",
        "Legosteine erfreuen sich grosser Beliebtheit bei Jung und Alt. Während der Marktführer aus Dänemark versucht seine vorherschende Position zu halten, drängen immmer mehr alternative Anbieter auf den Markt. Zudem hat sich ein vitaler Markt von Sammlern etabliert, bei dem historische Lego-Sets zum Teil mit grossen Preissteigerungen verkauft werden. Im Zeitraum von 1987 bis 2015 haben Lego Sets eine jährliche Preissteigerung von min. 11% erfahren (Dobrynskaya und Kishilova 2022). In anderen Worten: In gewissen Kreisen konnten sich Lego Sets als \"alternative Anlageklasse\" etablieren. Sie wurden von einem jungen Start-Up engagiert, Preisempfehlungen für neue Lego-Sets basierend auf linearer Regression abzugeben, um im diesem aufstrebenden Markt neue Services anzubieten.\n",
        "\n",
        "Bevor Sie starten, möchten Sie sich zunächst einen Überblick über verschiedene Sets am Markt verschaffen. Aus diesem Grund wurde ein erster Datensatz von verschiedenen Online-Plattformen (z.B. [rebrickable](https://rebrickable.com/), [bricklink](https://www.bricklink.com/v2/main.page)) gescrapt und mit auf ebay erzielten Marktpreisen in USD kombiniert.\n",
        "\n",
        "Credits: Adrian Pandjaitan, Daniel Zuyev, Lucas Decrinis, Maximilian Gutt-Will, Valentin Maria Kranz (Scrapen, Datenaufbereitung und Projektidee)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4QN5FyjB1tIw"
      },
      "source": [
        "# 1) Lesen Sie das Datenset \"lego_sets_unclean.csv\" ein!"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qK4Th80B1tIx"
      },
      "source": [
        "## 1a) Welche Datentypen sind vorhanden? Was ist der Unterschied zwischen diesen?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 310
        },
        "id": "xLOUkvKD1tIy",
        "outputId": "4d16e206-d5f9-4aac-fa8c-604bc3a0be0c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   ages  list_price  num_reviews  piece_count  play_star_rating  \\\n",
              "0  6-12       29.99          2.0          277               4.0   \n",
              "1  6-12       19.99          2.0          168               4.0   \n",
              "2  6-12       12.99         11.0           74               4.3   \n",
              "3   12+       99.99         23.0         1032               3.6   \n",
              "4   12+       79.99         14.0          744               3.2   \n",
              "\n",
              "                                           prod_desc  prod_id  \\\n",
              "0  Catapult into action and take back the eggs fr...    75823   \n",
              "1  Launch a flying attack and rescue the eggs fro...    75822   \n",
              "2  Chase the piggy with lightning-fast Chuck and ...    75821   \n",
              "3  Explore the architecture of the United States ...    21030   \n",
              "4  Recreate the Solomon R. Guggenheim Museum® wit...    21035   \n",
              "\n",
              "                                      prod_long_desc review_difficulty  \\\n",
              "0  Use the staircase catapult to launch Red into ...           Average   \n",
              "1  Pilot Pig has taken off from Bird Island with ...              Easy   \n",
              "2  Pitch speedy bird Chuck against the Piggy Car....              Easy   \n",
              "3  Discover the architectural secrets of the icon...           Average   \n",
              "4  Discover the architectural secrets of Frank Ll...       Challenging   \n",
              "\n",
              "                         set_name  star_rating    theme_name  val_star_rating  \\\n",
              "0           Bird Island Egg Heist          4.5  Angry Birds™              4.0   \n",
              "1              Piggy Plane Attack          5.0  Angry Birds™              4.0   \n",
              "2                Piggy Car Escape          4.3  Angry Birds™              4.1   \n",
              "3  United States Capitol Building          4.6  Architecture              4.3   \n",
              "4   Solomon R. Guggenheim Museum®          4.6  Architecture              4.1   \n",
              "\n",
              "  country  \n",
              "0      US  \n",
              "1      US  \n",
              "2      US  \n",
              "3      US  \n",
              "4      US  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d39478cc-bdbd-4980-ac3e-f7cafe5ceb33\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ages</th>\n",
              "      <th>list_price</th>\n",
              "      <th>num_reviews</th>\n",
              "      <th>piece_count</th>\n",
              "      <th>play_star_rating</th>\n",
              "      <th>prod_desc</th>\n",
              "      <th>prod_id</th>\n",
              "      <th>prod_long_desc</th>\n",
              "      <th>review_difficulty</th>\n",
              "      <th>set_name</th>\n",
              "      <th>star_rating</th>\n",
              "      <th>theme_name</th>\n",
              "      <th>val_star_rating</th>\n",
              "      <th>country</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6-12</td>\n",
              "      <td>29.99</td>\n",
              "      <td>2.0</td>\n",
              "      <td>277</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Catapult into action and take back the eggs fr...</td>\n",
              "      <td>75823</td>\n",
              "      <td>Use the staircase catapult to launch Red into ...</td>\n",
              "      <td>Average</td>\n",
              "      <td>Bird Island Egg Heist</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Angry Birds™</td>\n",
              "      <td>4.0</td>\n",
              "      <td>US</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>6-12</td>\n",
              "      <td>19.99</td>\n",
              "      <td>2.0</td>\n",
              "      <td>168</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Launch a flying attack and rescue the eggs fro...</td>\n",
              "      <td>75822</td>\n",
              "      <td>Pilot Pig has taken off from Bird Island with ...</td>\n",
              "      <td>Easy</td>\n",
              "      <td>Piggy Plane Attack</td>\n",
              "      <td>5.0</td>\n",
              "      <td>Angry Birds™</td>\n",
              "      <td>4.0</td>\n",
              "      <td>US</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6-12</td>\n",
              "      <td>12.99</td>\n",
              "      <td>11.0</td>\n",
              "      <td>74</td>\n",
              "      <td>4.3</td>\n",
              "      <td>Chase the piggy with lightning-fast Chuck and ...</td>\n",
              "      <td>75821</td>\n",
              "      <td>Pitch speedy bird Chuck against the Piggy Car....</td>\n",
              "      <td>Easy</td>\n",
              "      <td>Piggy Car Escape</td>\n",
              "      <td>4.3</td>\n",
              "      <td>Angry Birds™</td>\n",
              "      <td>4.1</td>\n",
              "      <td>US</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>12+</td>\n",
              "      <td>99.99</td>\n",
              "      <td>23.0</td>\n",
              "      <td>1032</td>\n",
              "      <td>3.6</td>\n",
              "      <td>Explore the architecture of the United States ...</td>\n",
              "      <td>21030</td>\n",
              "      <td>Discover the architectural secrets of the icon...</td>\n",
              "      <td>Average</td>\n",
              "      <td>United States Capitol Building</td>\n",
              "      <td>4.6</td>\n",
              "      <td>Architecture</td>\n",
              "      <td>4.3</td>\n",
              "      <td>US</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>12+</td>\n",
              "      <td>79.99</td>\n",
              "      <td>14.0</td>\n",
              "      <td>744</td>\n",
              "      <td>3.2</td>\n",
              "      <td>Recreate the Solomon R. Guggenheim Museum® wit...</td>\n",
              "      <td>21035</td>\n",
              "      <td>Discover the architectural secrets of Frank Ll...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Solomon R. Guggenheim Museum®</td>\n",
              "      <td>4.6</td>\n",
              "      <td>Architecture</td>\n",
              "      <td>4.1</td>\n",
              "      <td>US</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d39478cc-bdbd-4980-ac3e-f7cafe5ceb33')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d39478cc-bdbd-4980-ac3e-f7cafe5ceb33 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d39478cc-bdbd-4980-ac3e-f7cafe5ceb33');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d05e74a7-cd84-4504-b19f-1b2f3bc0ab7d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d05e74a7-cd84-4504-b19f-1b2f3bc0ab7d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d05e74a7-cd84-4504-b19f-1b2f3bc0ab7d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as py\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "df = pd.read_csv(\"drive/MyDrive/Business Analytics 2023/lego_sets_unclean.csv\")\n",
        "df.head()\n",
        "\n",
        "# Es sind 3 verschiedene Datentypen auf den ersten Blick erkennbar. Einerseits die Integers, also ein Zahlentyp, er ganzzahlige Werte speichert, wie 1, 2, usw.\n",
        "# Andererseits Floats (play Star Rating und num_reviews), ein Zahlentyp, der Gleitkommazahlen (Annäherungsswerte) abbildet\n",
        "# und zuletzt noch Strings, die Zeichenketten (Buchstaben, Sonderzeichen etc.), aber keine Zahlen abbilden."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "75Ub-jfL1tIz"
      },
      "source": [
        "## 1b) Untersuchen Sie die Variable \"num_reviews\" - Was fällt Ihnen hinsichtlich des Datentyps auf? Könnte man die Variable evtl. in einen besser geeigneten Datentyp überführen?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jXynLH1Q1tIz"
      },
      "outputs": [],
      "source": [
        "# Die Variable ist als Gleitkommazahl (Float) ausgegeben. Für die Anzahl der Reviews wäre ein Integer geeigneter, da Reviews nicht in Teilen gegeben werden."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "C9IirBy21tI0"
      },
      "source": [
        "# 2) Analyse der Lego Sets"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "mHtwP9n91tI0"
      },
      "source": [
        "## 2a) Welches Set ist das Teuerste?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IDO_GKlF1tI0",
        "outputId": "44ac778d-db9a-4461-fdaa-d0a1485f3745"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1104.87"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "df[\"list_price\"].max()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df[df.isin([1104.87]).any(axis=1)]\n",
        "#Der Millenium-Falke ist das teuerste Set"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 98
        },
        "id": "YyJnUena-HmU",
        "outputId": "3793bae9-660e-49fe-9973-82d352ca9d83"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     ages  list_price  num_reviews  piece_count  play_star_rating  \\\n",
              "9979  16+     1104.87        198.0         7541               4.0   \n",
              "\n",
              "                                              prod_desc  prod_id  \\\n",
              "9979  Travel the LEGO® galaxy in the ultimate Millen...    75192   \n",
              "\n",
              "                                         prod_long_desc review_difficulty  \\\n",
              "9979  Welcome to the largest, most detailed LEGO® St...       Challenging   \n",
              "\n",
              "                set_name  star_rating  theme_name  val_star_rating country  \n",
              "9979  Millennium Falcon™          4.8  Star Wars™              4.4      NO  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6e1fa165-69b2-4c41-955a-0db565a46be7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ages</th>\n",
              "      <th>list_price</th>\n",
              "      <th>num_reviews</th>\n",
              "      <th>piece_count</th>\n",
              "      <th>play_star_rating</th>\n",
              "      <th>prod_desc</th>\n",
              "      <th>prod_id</th>\n",
              "      <th>prod_long_desc</th>\n",
              "      <th>review_difficulty</th>\n",
              "      <th>set_name</th>\n",
              "      <th>star_rating</th>\n",
              "      <th>theme_name</th>\n",
              "      <th>val_star_rating</th>\n",
              "      <th>country</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>9979</th>\n",
              "      <td>16+</td>\n",
              "      <td>1104.87</td>\n",
              "      <td>198.0</td>\n",
              "      <td>7541</td>\n",
              "      <td>4.0</td>\n",
              "      <td>Travel the LEGO® galaxy in the ultimate Millen...</td>\n",
              "      <td>75192</td>\n",
              "      <td>Welcome to the largest, most detailed LEGO® St...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Millennium Falcon™</td>\n",
              "      <td>4.8</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>4.4</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e1fa165-69b2-4c41-955a-0db565a46be7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6e1fa165-69b2-4c41-955a-0db565a46be7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6e1fa165-69b2-4c41-955a-0db565a46be7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qrFTM0ci1tI1"
      },
      "source": [
        "## 2b) Wie viele Einträge aus der \"Classic\" Serie haben mindestens 4 Reviews oder haben einen günstigeren Preis als 5 USD?"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Classic = df[(df['theme_name'] == 'Classic') & ((df['num_reviews'] >= 4) | (df['list_price'] < 5))]\n",
        "print(Classic)\n",
        "print(len(Classic))\n",
        "\n",
        "#es müssten 235 Einträge sein"
      ],
      "metadata": {
        "id": "WcE_zBRpLSOL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f566786a-f0cc-41aa-e820-bf25bb415f6c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       ages  list_price  num_reviews  piece_count  play_star_rating  \\\n",
            "121    4-99     59.9900          4.0          790               5.0   \n",
            "122    4-99     34.9900         11.0          484               4.6   \n",
            "124    4-99     19.9900          8.0          303               4.8   \n",
            "125    4-99     16.9900          7.0          221               4.3   \n",
            "126    4-99     14.9900         24.0            1               4.3   \n",
            "...     ...         ...          ...          ...               ...   \n",
            "11804  4-99      6.0878          8.0           78               4.6   \n",
            "11805  4-99      6.0878          5.0           66               4.5   \n",
            "11806  4-99      6.0878          4.0           55               4.3   \n",
            "11808    4+      3.0378        180.0            1               4.0   \n",
            "11809  4-99     60.9878          4.0          790               5.0   \n",
            "\n",
            "                                               prod_desc  prod_id  \\\n",
            "121    Create all kinds of buildings with LEGO® brick...    10698   \n",
            "122    Create your own LEGO® vehicles with LEGO Classic!    10696   \n",
            "124            Get ideas, get creative and get building!    10693   \n",
            "125    Get creative with classic LEGO® bricks in 29 d...    10692   \n",
            "126    Add another useful piece to your LEGO® collect...    10701   \n",
            "...                                                  ...      ...   \n",
            "11804  Unleash your imagination with the LEGO® Blue C...    10706   \n",
            "11805  Unleash your imagination with the LEGO® Green ...    10708   \n",
            "11806  Unleash your imagination with the LEGO® Red Cr...    10707   \n",
            "11808                                Everyone needs one!      630   \n",
            "11809  Create all kinds of buildings with LEGO® brick...    10698   \n",
            "\n",
            "                                          prod_long_desc review_difficulty  \\\n",
            "121    Build up a storm with this big box of classic ...              Easy   \n",
            "122    Designed with builders of all ages in mind, th...              Easy   \n",
            "124    Get busy building whatever you imagine with th...              Easy   \n",
            "125    Dig into this selection of LEGO® bricks and le...              Easy   \n",
            "126    Whether you’re creating a street scene, castle...         Very Easy   \n",
            "...                                                  ...               ...   \n",
            "11804  Unleash a world of open-ended creativity and i...         Very Easy   \n",
            "11805  Unleash a world of open-ended creativity and i...              Easy   \n",
            "11806  Unleash a world of open-ended creativity and i...           Average   \n",
            "11808  This tool makes it a snap to pull those small ...         Very Easy   \n",
            "11809  Build up a storm with this big box of classic ...              Easy   \n",
            "\n",
            "                              set_name  star_rating theme_name  \\\n",
            "121     LEGO® Large Creative Brick Box          5.0    Classic   \n",
            "122    LEGO® Medium Creative Brick Box          4.6    Classic   \n",
            "124          LEGO® Creative Supplement          4.9    Classic   \n",
            "125              LEGO® Creative Bricks          4.1    Classic   \n",
            "126                     Gray Baseplate          4.1    Classic   \n",
            "...                                ...          ...        ...   \n",
            "11804              Blue Creativity Box          4.8    Classic   \n",
            "11805             Green Creativity Box          4.8    Classic   \n",
            "11806               Red Creativity Box          4.5    Classic   \n",
            "11808                  Brick Separator          4.8    Classic   \n",
            "11809   LEGO® Large Creative Brick Box          5.0    Classic   \n",
            "\n",
            "       val_star_rating country  \n",
            "121                5.0      US  \n",
            "122                4.7      US  \n",
            "124                4.9      US  \n",
            "125                4.3      US  \n",
            "126                3.5      US  \n",
            "...                ...     ...  \n",
            "11804              5.0      PT  \n",
            "11805              4.5      PT  \n",
            "11806              4.3      PT  \n",
            "11808              4.6      PT  \n",
            "11809              5.0      PT  \n",
            "\n",
            "[235 rows x 14 columns]\n",
            "235\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kd1AWbfb1tI1"
      },
      "source": [
        "## 2c) Listen Sie alle Einträge zum Death Star™. Was fällt Ihnen bezüglich des Preises auf? Beschreiben Sie die Verteilung des Preises.\n",
        "\n",
        "Hinweis: Das Self-Study in Module 2 behandelt die Verteilung von Variablen."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "TOnP549n1tI1",
        "outputId": "4b106613-e145-4c6b-b1ca-0996bb83f6e7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      ages  list_price  num_reviews  piece_count  play_star_rating  \\\n",
              "640    14+    499.9900         84.0         4016               4.5   \n",
              "1264   14+    607.9924         85.0         4016               4.5   \n",
              "1840   14+    609.9878         85.0         4016               4.5   \n",
              "2405   14+    609.9878         85.0         4016               4.5   \n",
              "3166   14+    467.9922         84.0         4016               4.5   \n",
              "3789   14+    590.5800         85.0         4016               4.5   \n",
              "4339   14+    719.9520         85.0         4016               4.5   \n",
              "4888   14+    609.9878         85.0         4016               4.5   \n",
              "5463   14+    539.8800         84.0         4016               4.5   \n",
              "6012   14+    609.9878         85.0         4016               4.5   \n",
              "6562   14+    731.9390         85.0         4016               4.5   \n",
              "7129   14+    609.9878         84.0         4016               4.5   \n",
              "7705   14+    573.9860         84.0         4016               4.5   \n",
              "8272   14+    609.9878         85.0         4016               4.5   \n",
              "8824   14+    609.9878         85.0         4016               4.5   \n",
              "9373   14+    609.9878         85.0         4016               4.5   \n",
              "9922   14+    714.8700         85.0         4016               4.5   \n",
              "10496  14+    609.9878         85.0         4016               4.5   \n",
              "11067  14+    638.9929         84.0         4016               4.5   \n",
              "11601  14+    667.0000         84.0         4016               4.5   \n",
              "12140  14+    609.9878         85.0         4016               4.5   \n",
              "\n",
              "                                               prod_desc  prod_id  \\\n",
              "640    Win the battle for the Empire with the awesome...    75159   \n",
              "1264   Win the battle for the Empire with the awesome...    75159   \n",
              "1840   Win the battle for the Empire with the awesome...    75159   \n",
              "2405   Win the battle for the Empire with the awesome...    75159   \n",
              "3166   Win the battle for the Empire with the awesome...    75159   \n",
              "3789   Win the battle for the Empire with the awesome...    75159   \n",
              "4339   Win the battle for the Empire with the awesome...    75159   \n",
              "4888   Win the battle for the Empire with the awesome...    75159   \n",
              "5463   Win the battle for the Empire with the awesome...    75159   \n",
              "6012   Win the battle for the Empire with the awesome...    75159   \n",
              "6562   Win the battle for the Empire with the awesome...    75159   \n",
              "7129   Win the battle for the Empire with the awesome...    75159   \n",
              "7705   Win the battle for the Empire with the awesome...    75159   \n",
              "8272   Win the battle for the Empire with the awesome...    75159   \n",
              "8824   Win the battle for the Empire with the awesome...    75159   \n",
              "9373   Win the battle for the Empire with the awesome...    75159   \n",
              "9922   Win the battle for the Empire with the awesome...    75159   \n",
              "10496  Win the battle for the Empire with the awesome...    75159   \n",
              "11067  Win the battle for the Empire with the awesome...    75159   \n",
              "11601  Win the battle for the Empire with the awesome...    75159   \n",
              "12140  Win the battle for the Empire with the awesome...    75159   \n",
              "\n",
              "                                          prod_long_desc review_difficulty  \\\n",
              "640    Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "1264   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "1840   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "2405   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "3166   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "3789   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "4339   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "4888   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "5463   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "6012   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "6562   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "7129   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "7705   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "8272   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "8824   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "9373   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "9922   Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "10496  Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "11067  Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "11601  Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "12140  Reenact amazing scenes from the Star Wars saga...       Challenging   \n",
              "\n",
              "          set_name  star_rating  theme_name  val_star_rating country  \n",
              "640    Death Star™          3.9  Star Wars™              3.5      US  \n",
              "1264   Death Star™          3.9  Star Wars™              3.5      AU  \n",
              "1840   Death Star™          3.9  Star Wars™              3.5      AT  \n",
              "2405   Death Star™          3.9  Star Wars™              3.5      BE  \n",
              "3166   Death Star™          3.9  Star Wars™              3.5      CA  \n",
              "3789   Death Star™          3.9  Star Wars™              3.5      CH  \n",
              "4339   Death Star™          3.9  Star Wars™              3.5      CZ  \n",
              "4888   Death Star™          3.9  Star Wars™              3.5      DE  \n",
              "5463   Death Star™          3.9  Star Wars™              3.5      DN  \n",
              "6012   Death Star™          3.9  Star Wars™              3.5      ES  \n",
              "6562   Death Star™          3.9  Star Wars™              3.5      FI  \n",
              "7129   Death Star™          3.9  Star Wars™              3.5      FR  \n",
              "7705   Death Star™          3.9  Star Wars™              3.5      GB  \n",
              "8272   Death Star™          3.9  Star Wars™              3.5      IE  \n",
              "8824   Death Star™          3.9  Star Wars™              3.5      IT  \n",
              "9373   Death Star™          3.9  Star Wars™              3.5      LU  \n",
              "9922   Death Star™          3.9  Star Wars™              3.5      NO  \n",
              "10496  Death Star™          3.9  Star Wars™              3.5      NL  \n",
              "11067  Death Star™          3.9  Star Wars™              3.5      NZ  \n",
              "11601  Death Star™          3.9  Star Wars™              3.5      PL  \n",
              "12140  Death Star™          3.9  Star Wars™              3.5      PT  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-99137957-6fae-4fcd-a6cd-afdd383a8bd4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ages</th>\n",
              "      <th>list_price</th>\n",
              "      <th>num_reviews</th>\n",
              "      <th>piece_count</th>\n",
              "      <th>play_star_rating</th>\n",
              "      <th>prod_desc</th>\n",
              "      <th>prod_id</th>\n",
              "      <th>prod_long_desc</th>\n",
              "      <th>review_difficulty</th>\n",
              "      <th>set_name</th>\n",
              "      <th>star_rating</th>\n",
              "      <th>theme_name</th>\n",
              "      <th>val_star_rating</th>\n",
              "      <th>country</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>640</th>\n",
              "      <td>14+</td>\n",
              "      <td>499.9900</td>\n",
              "      <td>84.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>US</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1264</th>\n",
              "      <td>14+</td>\n",
              "      <td>607.9924</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>AU</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1840</th>\n",
              "      <td>14+</td>\n",
              "      <td>609.9878</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>AT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2405</th>\n",
              "      <td>14+</td>\n",
              "      <td>609.9878</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>BE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3166</th>\n",
              "      <td>14+</td>\n",
              "      <td>467.9922</td>\n",
              "      <td>84.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>CA</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3789</th>\n",
              "      <td>14+</td>\n",
              "      <td>590.5800</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>CH</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4339</th>\n",
              "      <td>14+</td>\n",
              "      <td>719.9520</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>CZ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4888</th>\n",
              "      <td>14+</td>\n",
              "      <td>609.9878</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>DE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5463</th>\n",
              "      <td>14+</td>\n",
              "      <td>539.8800</td>\n",
              "      <td>84.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>DN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6012</th>\n",
              "      <td>14+</td>\n",
              "      <td>609.9878</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>ES</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6562</th>\n",
              "      <td>14+</td>\n",
              "      <td>731.9390</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>FI</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7129</th>\n",
              "      <td>14+</td>\n",
              "      <td>609.9878</td>\n",
              "      <td>84.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>FR</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7705</th>\n",
              "      <td>14+</td>\n",
              "      <td>573.9860</td>\n",
              "      <td>84.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>GB</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8272</th>\n",
              "      <td>14+</td>\n",
              "      <td>609.9878</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>IE</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8824</th>\n",
              "      <td>14+</td>\n",
              "      <td>609.9878</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>IT</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9373</th>\n",
              "      <td>14+</td>\n",
              "      <td>609.9878</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>LU</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9922</th>\n",
              "      <td>14+</td>\n",
              "      <td>714.8700</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NO</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10496</th>\n",
              "      <td>14+</td>\n",
              "      <td>609.9878</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NL</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11067</th>\n",
              "      <td>14+</td>\n",
              "      <td>638.9929</td>\n",
              "      <td>84.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>NZ</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11601</th>\n",
              "      <td>14+</td>\n",
              "      <td>667.0000</td>\n",
              "      <td>84.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>PL</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12140</th>\n",
              "      <td>14+</td>\n",
              "      <td>609.9878</td>\n",
              "      <td>85.0</td>\n",
              "      <td>4016</td>\n",
              "      <td>4.5</td>\n",
              "      <td>Win the battle for the Empire with the awesome...</td>\n",
              "      <td>75159</td>\n",
              "      <td>Reenact amazing scenes from the Star Wars saga...</td>\n",
              "      <td>Challenging</td>\n",
              "      <td>Death Star™</td>\n",
              "      <td>3.9</td>\n",
              "      <td>Star Wars™</td>\n",
              "      <td>3.5</td>\n",
              "      <td>PT</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99137957-6fae-4fcd-a6cd-afdd383a8bd4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-99137957-6fae-4fcd-a6cd-afdd383a8bd4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-99137957-6fae-4fcd-a6cd-afdd383a8bd4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b3ce42c4-877e-455e-b18a-775f6f3e20f7\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b3ce42c4-877e-455e-b18a-775f6f3e20f7')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b3ce42c4-877e-455e-b18a-775f6f3e20f7 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "df[df['set_name'].str.contains('Death Star')]\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Death_Star = df[df['set_name'].str.contains('Death Star')]\n",
        "\n",
        "Death_Star['list_price'].plot(kind='hist')\n",
        "plt.show()\n",
        "Death_Star['list_price'].mean()\n",
        "#Es fällt auf, dass die günstigsten Sets < 500 in den USA und Kanada erhältlich sind, während die Sets in den europäischen Ländern, als auch Australien, Neuseeland überall > 500 kosten. Der Preis ist mehr oder weniger normalverteilt, wenn man eine Linie über das Diagramm ziehen würde mit einem Mean von 612.\n",
        "#Das teuerste Set ist dabei in Norwegen zu kaufen. Die Abweichungen sowohl nach oben als auch nach unten sind teilweise sehr gross."
      ],
      "metadata": {
        "id": "E-O35v07Edsd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "outputId": "58484b88-c9b5-42f8-90d6-0abc30b62764"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "612.0501190476191"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oC7nJcqK1tI2"
      },
      "source": [
        "# 3) Lineares Modell\n",
        "\n",
        "Für die Vorhersage von Setpreisen haben wir Ihnen einen zweiten Datensatz vorbereitet \"lego_sets_clean.csv\". In diesem wurden bereits eine Reihe von \"PreProcessing-Schritte\" durchgeführt, damit wir eine Lineare Regression durführen können\n",
        "- Aufteilen der features \"ages\" in min_age und max_age als numerische features\n",
        "- Löschen der \"missing values\" (non null values)\n",
        "- Umwandlung der \"review_difficulty\" feature auf eine Fünfer-Skala von 1-5\n",
        "- Löschen irrelevanter Variablen für die Regression\n",
        "- Umwandeln der objects \"theme_name\" und \"country\" in dummies\n",
        "\n",
        "Wir werden die Pre-processing Schritte bei Besprechung des Assignments zusammendurchgehen. Zum jetzigen Verständnis ist erstmal nur relevant, dass \"objects\" in Pandas in Dummy-Variablen umgewandelt wurden, die ausschliesslich den Wert 0 oder 1 annehmen können. Das Feature \"theme_name_classic\" nimmt für ein bestimmtes Lego-Set den Wert 1 an, wenn es zum Theme \"Classic\" gehört und 0, wenn es nicht zum Theme Classic gehört. Wir werden dies aber auch nochmal im Kurs in Modul 3 besprechen am 11.10 (vor Abgabe des Assignments 1 besprechen)."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XFgDGAWU1tI2"
      },
      "source": [
        "## 3a) Lesen Sie den Datensatz \"lego_sets_clean.csv\" ein"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 273
        },
        "id": "IV4Z6JzY1tI2",
        "outputId": "e78fee6b-44b3-481b-b6ab-0e4bdf02656e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   list_price  num_reviews  piece_count  play_star_rating  review_difficulty  \\\n",
              "0       29.99            2          277               4.0                  2   \n",
              "1       19.99            2          168               4.0                  1   \n",
              "2       12.99           11           74               4.3                  1   \n",
              "3       99.99           23         1032               3.6                  2   \n",
              "4       79.99           14          744               3.2                  3   \n",
              "\n",
              "   star_rating  val_star_rating  min_age  max_age  theme_name_Angry Birds™  \\\n",
              "0          4.5              4.0        6       12                        1   \n",
              "1          5.0              4.0        6       12                        1   \n",
              "2          4.3              4.1        6       12                        1   \n",
              "3          4.6              4.3       12       99                        0   \n",
              "4          4.6              4.1       12       99                        0   \n",
              "\n",
              "   ...  country_GB  country_IE  country_IT  country_LU  country_NL  \\\n",
              "0  ...           0           0           0           0           0   \n",
              "1  ...           0           0           0           0           0   \n",
              "2  ...           0           0           0           0           0   \n",
              "3  ...           0           0           0           0           0   \n",
              "4  ...           0           0           0           0           0   \n",
              "\n",
              "   country_NO  country_NZ  country_PL  country_PT  country_US  \n",
              "0           0           0           0           0           1  \n",
              "1           0           0           0           0           1  \n",
              "2           0           0           0           0           1  \n",
              "3           0           0           0           0           1  \n",
              "4           0           0           0           0           1  \n",
              "\n",
              "[5 rows x 68 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a4c1b5f6-7049-447a-b7ac-1a25878a7ed1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>list_price</th>\n",
              "      <th>num_reviews</th>\n",
              "      <th>piece_count</th>\n",
              "      <th>play_star_rating</th>\n",
              "      <th>review_difficulty</th>\n",
              "      <th>star_rating</th>\n",
              "      <th>val_star_rating</th>\n",
              "      <th>min_age</th>\n",
              "      <th>max_age</th>\n",
              "      <th>theme_name_Angry Birds™</th>\n",
              "      <th>...</th>\n",
              "      <th>country_GB</th>\n",
              "      <th>country_IE</th>\n",
              "      <th>country_IT</th>\n",
              "      <th>country_LU</th>\n",
              "      <th>country_NL</th>\n",
              "      <th>country_NO</th>\n",
              "      <th>country_NZ</th>\n",
              "      <th>country_PL</th>\n",
              "      <th>country_PT</th>\n",
              "      <th>country_US</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>29.99</td>\n",
              "      <td>2</td>\n",
              "      <td>277</td>\n",
              "      <td>4.0</td>\n",
              "      <td>2</td>\n",
              "      <td>4.5</td>\n",
              "      <td>4.0</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>19.99</td>\n",
              "      <td>2</td>\n",
              "      <td>168</td>\n",
              "      <td>4.0</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>12.99</td>\n",
              "      <td>11</td>\n",
              "      <td>74</td>\n",
              "      <td>4.3</td>\n",
              "      <td>1</td>\n",
              "      <td>4.3</td>\n",
              "      <td>4.1</td>\n",
              "      <td>6</td>\n",
              "      <td>12</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>99.99</td>\n",
              "      <td>23</td>\n",
              "      <td>1032</td>\n",
              "      <td>3.6</td>\n",
              "      <td>2</td>\n",
              "      <td>4.6</td>\n",
              "      <td>4.3</td>\n",
              "      <td>12</td>\n",
              "      <td>99</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>79.99</td>\n",
              "      <td>14</td>\n",
              "      <td>744</td>\n",
              "      <td>3.2</td>\n",
              "      <td>3</td>\n",
              "      <td>4.6</td>\n",
              "      <td>4.1</td>\n",
              "      <td>12</td>\n",
              "      <td>99</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 68 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4c1b5f6-7049-447a-b7ac-1a25878a7ed1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a4c1b5f6-7049-447a-b7ac-1a25878a7ed1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a4c1b5f6-7049-447a-b7ac-1a25878a7ed1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-78797ce5-e8db-4fce-9a85-0941eda26a28\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78797ce5-e8db-4fce-9a85-0941eda26a28')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-78797ce5-e8db-4fce-9a85-0941eda26a28 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "\n",
        "df = pd.read_csv(\"drive/MyDrive/Business Analytics 2023/lego_sets_clean.csv\")\n",
        "df.head()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fEAZZqxa1tI2"
      },
      "source": [
        "## 3b) Erstellen Sie einen Trainings- und einen Testdatensatz. Der Testdatensatz soll die ersten 7000 Instanzen umfassen. Welche Schwierigkeiten könnten bei dieser Aufteilung auftreten?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "gFT0ljRi1tI2",
        "outputId": "605058f4-707f-4da9-9897-70d7bdf1ba65",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        }
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-1-9cab930f8e4f>\u001b[0m in \u001b[0;36m<cell line: 2>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mstatsmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapi\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0msm\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mX\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"piece_count\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"list_price\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m#Es ist kein zufällig gewähltes Sample. Die Werteverteilung könnte unvorteilhaft sein (bspw. nur sehr niedrige Preise in den ersten 7000 oder ähnliches).\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;31m#Die Diversifikation der Daten für das Modell könnte nicht so gut sein, wie wenn man das Modell selber zufällig 7000 Werte auswählen lässt und es damit trainiert.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"
          ]
        }
      ],
      "source": [
        "import statsmodels.api as sm\n",
        "X = df[\"piece_count\"]\n",
        "y = df[\"list_price\"]\n",
        "#Es ist kein zufällig gewähltes Sample. Die Werteverteilung könnte unvorteilhaft sein (bspw. nur sehr niedrige Preise in den ersten 7000 oder ähnliches).\n",
        "#Die Diversifikation der Daten für das Modell könnte nicht so gut sein, wie wenn man das Modell selber zufällig 7000 Werte auswählen lässt und es damit trainiert.\n",
        "#Möglicherweise kann diese Auswahl die Aussagekraft des Modells anschliessend beeinträchtigen."
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test_set = df.iloc[:7000]\n",
        "train_set = df.iloc[7000:]\n",
        "#Es ist kein zufällig gewähltes Sample. Die Werteverteilung könnte unvorteilhaft sein (bspw. nur sehr niedrige Preise in den ersten 7000 oder ähnliches).\n",
        "#Die Diversifikation der Daten für das Modell könnte nicht so gut sein, wie wenn man das Modell selber zufällig 7000 Werte auswählen lässt und es damit trainiert.\n",
        "#Möglicherweise kann diese Auswahl die Aussagekraft des Modells anschliessend beeinträchtigen."
      ],
      "metadata": {
        "id": "O0HQeHowSjgN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E9h7W5ZD1tI3"
      },
      "source": [
        "## 3c) Erstellen Sie ein lineares Modell und trainieren Sie es zur Vorhersage des Preises. Lassen Sie sich den Summary Report ausgeben."
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "eTeIx8FzQ0Xq"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aNBPvUvZ1tI3"
      },
      "outputs": [],
      "source": [
        "X = sm.add_constant(X)\n",
        "LegoModel = sm.OLS(y, X)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "LegoModel = LegoModel.fit()"
      ],
      "metadata": {
        "id": "9Fc4fMd2Ur3y"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(LegoModel.summary())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jgkgk26_U5ak",
        "outputId": "c56d4272-470b-40ff-c8d5-66451253175f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:             list_price   R-squared:                       0.756\n",
            "Model:                            OLS   Adj. R-squared:                  0.756\n",
            "Method:                 Least Squares   F-statistic:                 3.804e+04\n",
            "Date:                Tue, 10 Oct 2023   Prob (F-statistic):               0.00\n",
            "Time:                        16:16:05   Log-Likelihood:                -64182.\n",
            "No. Observations:               12261   AIC:                         1.284e+05\n",
            "Df Residuals:                   12259   BIC:                         1.284e+05\n",
            "Df Model:                           1                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "===============================================================================\n",
            "                  coef    std err          t      P>|t|      [0.025      0.975]\n",
            "-------------------------------------------------------------------------------\n",
            "const          17.3243      0.478     36.256      0.000      16.388      18.261\n",
            "piece_count     0.0969      0.000    195.027      0.000       0.096       0.098\n",
            "==============================================================================\n",
            "Omnibus:                    13987.172   Durbin-Watson:                   1.040\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):          2037748.322\n",
            "Skew:                           5.819   Prob(JB):                         0.00\n",
            "Kurtosis:                      65.075   Cond. No.                     1.12e+03\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The condition number is large, 1.12e+03. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "H755L1B_1tI3"
      },
      "source": [
        "## 3d) Welchen Einfluss hat die Anzahl der Legosteine in einem Set auf den Preis? Ist dieser Signifikant? Was ist der marginale Umsatz pro zusätzlichem Legostein in einem Set?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "w78fAvGc1tI3"
      },
      "outputs": [],
      "source": [
        "#Der R-squared zeigt, dass wir ca. 76% der Preise mit der Anzahl der Legosteine erklären können. Es scheint also zu einem Preisanstieg zu kommen, wenn mehr Steine in einem Set sind.\n",
        "#Weiter ist der Regressionskoeffizient 0, was bedeutet, dass dieser signifikant ist und ein systematischer Effekt der Anzahl Legosteine auf den Preis existiert.\n",
        "#Der marginale Umsatz pro zusätzlichem Legostein beträgt 0.0969."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "4cv7UxCr1tI3"
      },
      "source": [
        "# 4) Preisvorhersage"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fOZxJYQa1tI3"
      },
      "source": [
        "## 4a) Sagen Sie die Preise für die Testdaten voraus. Wie hoch ist der RMSE?"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred = LegoModel.predict(X)\n",
        "print(y_pred)\n",
        "#Ich verstehe hierbei die Problematik nicht ganz"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 210
        },
        "id": "lhJwiUgsaNIC",
        "outputId": "97a57815-92a6-47c6-a0f4-03a5d2e0c253"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "NameError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-14-e4ddf656561f>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mLegoModel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;31m#Ich verstehe hierbei die Problematik nicht ganz\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mNameError\u001b[0m: name 'LegoModel' is not defined"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "7ctWoFln1tI3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4dbb4204-105a-4522-9b34-fd3431e18d15"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0   -14.179353\n",
              "1   -13.615786\n",
              "2   -11.505921\n",
              "3   -17.349012\n",
              "4    -9.437937\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 172
        }
      ],
      "source": [
        "residuals = LegoModel.resid\n",
        "residuals.head()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "SSE = sum(residuals**2)\n",
        "print(SSE)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oR5J1hd8a1o7",
        "outputId": "07292d43-271a-4e4e-8fca-8397eb670fed"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "25282201.593328804\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "RSME = np.sqrt(np.mean(residuals**2))\n",
        "print(RSME)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QSitsMW5bJ6i",
        "outputId": "69398030-e86a-440e-d063-1dcf542ab769"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "45.40926775472654\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f-kYdr441tI3"
      },
      "source": [
        "## 4b) Interpretieren Sie den RSME. Was sagt dieser eigentlich genau aus? Wie steht dieser in Relation zum mittleren Preis?"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-xvuQh581tI4"
      },
      "outputs": [],
      "source": [
        "#Der RSME sagt aus, dass die Vorhersage im Durchschnitt 45.4 Preiseinheiten vom \"richtigen\"/mittleren Preis entfernt ist. Je grösser der RSME desto schlechter die Anpassung des Modells und damit die Fehler. Ich empfinde das etwas widersprüchlich mit den erhaltenen Residuals, wo wir eine Signifikanz und einen R-square erhalten haben, der vermuten liesse, dass das Modell relativ zuverlässig ist. ABer 45.4 Einheiten Abweichung in der Vorhersage liest sich dann doch wieder relativ gross.\n"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.12"
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}